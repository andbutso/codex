(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["ReactTouchEvents"] = factory(require("react"));
	else
		root["ReactTouchEvents"] = factory(root["React"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Created by jerry on 16/9/5.
	 */

	var React = __webpack_require__(1);
	var PropTypes = React.PropTypes;

	function touchX(event) {
	    return event.touches[0].clientX;
	}

	function touchY(event) {
	    return event.touches[0].clientY;
	}

	var ReactTouchEvents = function (_React$Component) {
	    _inherits(ReactTouchEvents, _React$Component);

	    function ReactTouchEvents() {
	        var _ref;

	        var _temp, _this, _ret;

	        _classCallCheck(this, ReactTouchEvents);

	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }

	        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ReactTouchEvents.__proto__ || Object.getPrototypeOf(ReactTouchEvents)).call.apply(_ref, [this].concat(args))), _this), _this.handleTouchStart = function (event) {

	            if (_this.touchStarted) {
	                return;
	            }

	            _this.touchStarted = true;

	            _this.touchMoved = false;
	            _this.swipeOutBounded = false;

	            _this.startX = touchX(event);
	            _this.startY = touchY(event);

	            _this.currentX = 0;
	            _this.currentY = 0;
	        }, _this.handleTouchMove = function (event) {
	            _this.currentX = touchX(event);
	            _this.currentY = touchY(event);

	            if (!_this.touchMoved) {
	                var tapTolerance = _this.props.tapTolerance;

	                _this.touchMoved = Math.abs(_this.startX - _this.currentX) > tapTolerance || Math.abs(_this.startY - _this.currentY) > tapTolerance;
	            } else if (!_this.swipeOutBounded) {
	                var swipeOutBounded = _this.props.swipeTolerance;

	                _this.swipeOutBounded = Math.abs(_this.startX - _this.currentX) > swipeOutBounded && Math.abs(_this.startY - _this.currentY) > swipeOutBounded;
	            }
	        }, _this.handleTouchCancel = function () {
	            _this.touchStarted = _this.touchMoved = false;
	            _this.startX = _this.startY = 0;
	        }, _this.handleTouchEnd = function (event) {
	            _this.touchStarted = false;

	            if (!_this.touchMoved) {
	                if (_this.props.onTap) {
	                    _this.props.onTap(event);
	                }
	            } else if (!_this.swipeOutBounded) {
	                if (_this.props.onSwipe) {
	                    var swipeOutBounded = _this.props.swipeTolerance,
	                        direction = void 0;

	                    if (Math.abs(_this.startX - _this.currentX) < swipeOutBounded) {
	                        direction = _this.startY > _this.currentY ? "top" : "bottom";
	                    } else {
	                        direction = _this.startX > _this.currentX ? "left" : "right";
	                    }

	                    _this.props.onSwipe(direction, event);
	                }
	            }
	        }, _temp), _possibleConstructorReturn(_this, _ret);
	    }

	    _createClass(ReactTouchEvents, [{
	        key: "render",
	        value: function render() {
	            var children = this.props.children;
	            var element = children ? React.Children.only(children) : React.createElement("button", null);

	            return React.cloneElement(element, {
	                onTouchStart: this.handleTouchStart,
	                onTouchMove: this.handleTouchMove,
	                onTouchCancel: this.handleTouchCancel,
	                onTouchEnd: this.handleTouchEnd
	            });
	        }
	    }]);

	    return ReactTouchEvents;
	}(React.Component);

	ReactTouchEvents.defaultProps = {
	    tapTolerance: 10,
	    swipeTolerance: 30
	};

	ReactTouchEvents.propTypes = {
	    children: PropTypes.node,
	    tapTolerance: PropTypes.number,
	    swipeTolerance: PropTypes.number,
	    onTap: PropTypes.func,
	    onSwipe: PropTypes.func
	};

	module.exports = ReactTouchEvents;

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }
/******/ ])
});
;